apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "tlv.fullname" . }}"
  labels:
    {{- include "tlv.labels" . | nindent 4 }}
data:
  application.yaml: |-
    about:
      contactEmail: Kevin.Naquin@maxar.com
      releaseName: HystericalHyena
      releaseNumber: 1.0.0

    baseLayers:
      googleRoads:
        name: Google Roads
        type: xyz
        urls: https://mt1.google.com/vt/lyrs=h&x={x}&y={y}&z={z}
        visible: false
      googleSatelliteHybrid:
        name: Google Satellite Hybrid
        type: xyz
        urls: https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}
        visible: false
      googleTerrain:
        name: Google Terrain
        type: xyz
        urls: https://mt1.google.com/vt/lyrs=t&x={x}&y={y}&z={z}
        visible: false
      osmBasic:
        layers: o2-basemap-basic
        name: OSM Basic
        styles: ""
        type: wms
        urls: /omar-mapproxy/service
        visible: false
      osmBright:
        layers: o2-basemap-bright
        name: OSM Bright
        styles: ""
        type: wms
        urls: /omar-mapproxy/service
        visible: false

    baseUrl: ""

    endpoints:
      actuator:
        sensitive: false
      beans:
        sensitive: false
      configprops:
        sensitive: false
      enabled: true
      env:
        sensitive: false
      health:
        enabled: true
      loggers:
        sensitive: false
      mappings:
        sensitive: false
      metrics:
        sensitive: false
      trace:
        sensitive: false

    environments:
      production:
        dataSource:
          url: ${omarDb.url}
          dbCreate: update

    omarDb:
      dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
      driver: org.postgresql.Driver
      host:  {{ .Values.global.omarDb.host }}
      name: {{ .Values.global.omarDb.name }}
      username: {{ .Values.global.omarDb.user }}
      password: {{ .Values.global.omarDb.password }}
      port: {{ .Values.global.omarDb.port }}
      url: jdbc:postgresql://${omarDb.host}:${omarDb.port}/${omarDb.name}

    grails:
      serverURL: {{ .Values.baseUrl }}${server.contextPath}

    hystrix:
      execution:
        timeout:
          enabled: false
      fallback:
        enabled: false

    ionAccessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwMTU5ODJmNy0zNzk4LTRjNWQtODdjYS1kZGFkZWMzNGJiYTQiLCJpZCI6NDA0OCwic2NvcGVzIjpbImFzciIsImdjIl0sImlhdCI6MTUzOTcxNTA1NX0.-qj

    libraries:
      o2:
        wmsUrls: {{ .Values.baseUrl }}/omar-wms/wms

    swagger:
      info:
        contact:
          email: kurt.feldbush@maxar.com
          name: Maxar
          url: http://overview.ossim.io
        license:
          name: Licensed under MIT
          url: https://opensource.org/licenses/MIT
        title: ${info.app.name} API
        version: ${info.app.version}
      validatorUrl: ""

    userInfo:
      requestHeaderUserName: username
      requestHeaderUserNameDefault: Anonymous

    server:
      servlet:
        context-path: {{ .Values.ingressPath }}
      contextPath: ${server.servlet.context-path}
