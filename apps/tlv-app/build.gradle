buildscript {
    repositories {
        mavenLocal()
        maven { url ossimMavenProxy }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.10"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.12'
        classpath 'io.ossim:gradleDefaults:1.6-SNAPSHOT'
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"

repositories {
    mavenLocal()
    maven { url ossimMavenProxy }
}

io.ossim.gradleDefaults.Variables.setAdditionalVariables(project)
io.ossim.gradleDefaults.Variables.setVersionVariables(project)
dockerBuildDir="${rootProject.projectDir}/docker"
version "${buildVersion}-${buildVersionTag}"
jarDestination = "${projectDir}/build/libs/${project.name}-${version}.jar"
io.ossim.gradleDefaults.Docker.addDockerTasks(project, dockerRegistryUrl, dockerRegistryUsername, dockerRegistryPassword, name, dockerImageTag, dockerBuildDir, jarDestination, ["BASE_IMAGE": "${dockerRegistryUrl}/${dockerBaseImage}"])
io.ossim.gradleDefaults.Openshift.addOpenshiftTasks(project, openshiftUrl, openshiftUsername, openshiftPassword, openshiftProjectName, openshiftServiceName,  dockerRegistryUrl, name, dockerImageTag)

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudDependencyV}"
    }
    applyMavenExclusions false
}

if ( System.getenv('O2_INLINE_BUILD') ) {
  grails {
    plugins {
      compile project(":omar-core-plugin")
      compile project(":omar-security-plugin")
    }
  }
}

dependencies {
  if ( ! System.getenv('O2_INLINE_BUILD') ) {
    compile "io.ossim.omar.plugins:omar-core-plugin:+"
    compile "io.ossim.omar.plugins:omar-security-plugin:+"
   }

    compile "de.codecentric:spring-boot-admin-starter-client:${springBootAdminStarterClientV}"
    compile "io.swagger:swagger-models:1.5.15"
    compile "org.grails.plugins:actuator-ui:1.1"

    compile "org.grails.plugins:spring-security-core:3.2.3"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:${hibernateCoreV}"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:${elImplV}"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:${assetPipelineGrailsV}"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumHtmlUnitDriverV}"
    testRuntime "net.sourceforge.htmlunit:htmlunit:${htmlUnitV}"

    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    compile 'org.grails.plugins:scaffolding'
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars.bower:typeahead.js:0.11.1'
    compile 'org.webjars.bower:typeahead.js-bootstrap-css:1.2.1'
    compile 'org.webjars:font-awesome:4.4.0'
    compile 'org.webjars:jquery:2.2.0'
    compile 'org.webjars:jszip:3.1.0'
    compile 'org.webjars:momentjs:2.11.0'
    compile 'org.webjars.npm:cesium:1.43.0'
    compile 'org.webjars:bootswatch:3.3.5+4'
    compile 'org.webjars:swagger-ui:3.20.5'

    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-eureka'

    compile 'org.postgresql:postgresql:42.2.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
    excludes = [
        "**"
    ]
    includes = [
        "**/*-bundle.*",
        "**/application.*",
        "**/bootstrap/**/fonts/**",
        "**/bootswatch/**/*.min.css",
        "**/bootswatch*/**/glyphicons*",
        "**/Cesium.js",
        "**/Cesium/Assets/**/*.json",
        "**/Cesium/Workers/*.js",
        "**/font-awesome/**/fonts/**",
        "**/geometries-bundle.*",
        "**/gif-bundle.*",
        "**/helvetiker*",
        "**/logos/**",
        "**/prototype.*",
        "**/tlvicon.ico"
    ]
}
