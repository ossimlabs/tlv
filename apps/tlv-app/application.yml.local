---
server:
    port: 8090
    contextPath: /tlv

baseUrl: https://omar.ossim.io
#baseUrl: http://localhost
geocoderUrl: ${baseUrl}/omar-ui/twoFishesProxy

omarDb:
    url: jdbc:postgresql:omardb-prod

libraries:
    o2-dev:
        imageSpaceUrl: ${baseUrl}/omar-ui/omar/#/mapImage
        kmlUrl: ${baseUrl}/omar-superoverlay/superOverlay/createKml
        label: O2-DEV
        layerType: wms
        mensaUrl: ${baseUrl}/omar-mensa/mensa
        wfsUrl: ${baseUrl}/omar-wfs/wfs
        wmsUrl: ${baseUrl}/omar-wms/wms
        stagerUrl: ${baseUrl}/omar-stager

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    #dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect

environments:
    development:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#            url: jdbc:postgresql:omardb-dev

---
defaultUsername: Anonymous

requestHeaderUsername: username

securityClassification:
    backgroundColor: green
    classification: Unclassified
    textColor: white

# ---
# grails:
#     plugin:
#         springsecurity:
#             userLookup:
#                 userDomainClassName: 'omar.security.SecUser'
#                 authorityJoinClassName: 'omar.security.SecUserSecRole'
#             authority:
#                 className: 'omar.security.SecRole'
#             controllerAnnotations:
#                 staticRules:
#                     - pattern: '/**'
#                       access: [ 'permitAll' ]
#                     - pattern: '/error'
#                       access: [ 'permitAll' ]
#                     - pattern: '/index'
#                       access: [ 'permitAll' ]
#                     - pattern: '/index.gsp'
#                       access: [ 'permitAll' ]
#                     - pattern: '/shutdown'
#                       access: [ 'permitAll' ]
#                     - pattern: '/assets/**'
#                       access: [ 'permitAll' ]
#                     - pattern: '/**/js/**'
#                       access: [ 'permitAll' ]
#                     - pattern: '/**/css/**'
#                       access: [ 'permitAll' ]
#                     - pattern: '/**/images/**'
#                       access: [ 'permitAll' ]
#                     - pattern: '/**/favicon.ico'
#                       access: [ 'permitAll' ]
#             filterChain:
#                 chainMap:
#                     - pattern: '/assets/**'
#                       filters: 'none'
#                     - pattern: '/**/js/**'
#                       filters: 'none'
#                     - pattern: '/**/css/**'
#                       filters: 'none'
#                     - pattern: '/**/images/**'
#                       filters: 'none'
#                     - pattern: '/**/favicon.ico'
#                       filters: 'none'
#                     - pattern: '/**'
#                       filters: 'JOINED_FILTERS'

baseLayers:
    osmBright:
        layers: o2-basemap-bright
        name: OSM Bright
        styles:
        type: wms
        visible: true
        urls: http://omar-dev.ossim.io/omar-mapproxy/service

